diff -crB --new-file VampirTrace-5.14.4/acinclude.m4 VampirTrace-5.14.4-apihooks/acinclude.m4
*** VampirTrace-5.14.4/acinclude.m4	2013-06-14 09:44:19.000000000 +0200
--- VampirTrace-5.14.4-apihooks/acinclude.m4	2016-03-12 09:35:42.863077841 +0100
***************
*** 1,3 ****
--- 1,4 ----
+ m4_include(config/m4/acinclude.apihook.m4)
  m4_include(config/m4/acinclude.clapack.m4)
  m4_include(config/m4/acinclude.compinst.m4)
  m4_include(config/m4/acinclude.compwrap.m4)
diff -crB --new-file VampirTrace-5.14.4/config/m4/acinclude.apihook.m4 VampirTrace-5.14.4-apihooks/config/m4/acinclude.apihook.m4
*** VampirTrace-5.14.4/config/m4/acinclude.apihook.m4	1970-01-01 01:00:00.000000000 +0100
--- VampirTrace-5.14.4-apihooks/config/m4/acinclude.apihook.m4	2013-03-21 14:15:54.000000000 +0100
***************
*** 0 ****
--- 1,54 ----
+ AC_DEFUN([ACVT_APIHOOKS],
+ [
+ 	have_apihooks="no"
+ 	apihooks_error="no"
+ 
+ 	APIHOOKSLIBDIR=
+ 	APIHOOKSLIB="-lvtapihooks"
+ 	APIHOOKSPREFIX="vt_api_hooks"
+ 
+ 
+ 	AC_MSG_CHECKING([whether API hooks should be included])
+ 
+ 	AC_ARG_ENABLE(
+ 		apihooks,
+ 		AC_HELP_STRING(
+ 			[--enable-apihooks],
+ 			[enable support for API hooks, default: disabled]),
+ 		[
+ 			have_apihooks="yes";
+ 			AC_MSG_RESULT([yes])
+ 		],
+ 		[
+ 			AC_MSG_RESULT([no])
+ 		]
+ 		
+ 	)
+ 
+ 	AS_IF([test x"$have_apihooks" = "xyes"],
+ 	[
+ 		AC_ARG_WITH(apihooks-lib-dir,
+ 			AC_HELP_STRING([--with-apihooks-lib-dir=APIHOOKSLIBDIR],
+ 			[give the path for API-hooks-library, default: /usr/lib]),
+ 		[APIHOOKSLIBDIR="-L$withval/"])
+ 
+ 		AC_ARG_WITH(apihooks-lib,
+ 			AC_HELP_STRING([--with-apihooks-lib=APIHOOKSLIB], [use given API hooks lib, default: -lvtapihooks]),
+ 		[APIHOOKSLIB="$withval"])
+ 
+ 		AC_ARG_WITH(apihooks-prefix,
+ 			AC_HELP_STRING([--with-apihooks-prefix=APIHOOKSPREFIX], [use given API hooks prefix, default: vt_api_hooks]),
+ 		[APIHOOKSPREFIX="$withval"])
+ 
+ 		sav_LIBS=$LIBS
+ 		LIBS="$LIBS $APIHOOKSLIBDIR $APIHOOKSLIB"
+ 
+ 		AC_MSG_CHECKING([whether API hooks library can be found/linked (flags: $LIBS)])
+ 		AC_TRY_LINK([],[],
+ 		[AC_MSG_RESULT([yes])],[AC_MSG_RESULT([no]);apihooks_error=yes])
+ 		LIBS=$sav_LIBS
+ 	])
+ 	AC_SUBST(APIHOOKSLIBDIR)
+ 	AC_SUBST(APIHOOKSLIB)
+ 	AC_SUBST(APIHOOKSPREFIX)
+ ])
diff -crB --new-file VampirTrace-5.14.4/config/m4/acinclude.conf.m4 VampirTrace-5.14.4-apihooks/config/m4/acinclude.conf.m4
*** VampirTrace-5.14.4/config/m4/acinclude.conf.m4	2013-02-18 09:45:40.000000000 +0100
--- VampirTrace-5.14.4-apihooks/config/m4/acinclude.conf.m4	2016-03-12 09:33:39.519695578 +0100
***************
*** 284,289 ****
--- 284,299 ----
  		[answer="yes"], [answer="no"])
  		echo "  Build Plugin Counter support:              $answer"
  
+ 		AS_IF([test x"$have_apihooks" = "xyes"],
+ 		[answer="yes"], [answer="no"])  
+ 		echo "  Build API hook support:                    $answer"
+ 
+ 		AS_IF([test x"$have_apihooks" = "xyes"],
+ 		[
+ 			echo "   API hooks library:                        $APIHOOKSLIB"
+ 			echo "   API hooks prefix :                        $APIHOOKSPREFIX"
+ 		])
+ 
  		AS_IF([test x"$have_rusage" = "xyes"],
  		[answer="yes"], [answer="no"])
  		echo "  Build Resource usage trace support:        $answer"
diff -crB --new-file VampirTrace-5.14.4/configure.ac VampirTrace-5.14.4-apihooks/configure.ac
*** VampirTrace-5.14.4/configure.ac	2013-06-14 09:45:34.000000000 +0200
--- VampirTrace-5.14.4-apihooks/configure.ac	2016-03-12 09:37:05.114666702 +0100
***************
*** 341,346 ****
--- 341,353 ----
  AM_CONDITIONAL(AMBUILDJAVA, test x"$have_java" = "xyes")
  AM_CONDITIONAL(AMBUILDVTJAVA, test x"$have_java" = "xyes" -a x"$JAVA" != x)
  
+ # Check for support for API hooks
+ ACVT_CONF_TITLE([API hooks])
+ ACVT_APIHOOKS
+ #these only occur if api hooks are enforced but the linking failed
+ AS_IF([test x"$apihooks_error" = "xyes"], [AC_MSG_NOTICE([Error: Linking failed]); exit 1])
+ AM_CONDITIONAL(AMHAVEAPIHOOKS, test x"$have_apihooks" = "xyes")
+ 
  # Check for hardware performace counter support
  ACVT_CONF_TITLE([Hardware performance counter])
  ACVT_METRICS
diff -crB --new-file VampirTrace-5.14.4/vtlib/Makefile.am VampirTrace-5.14.4-apihooks/vtlib/Makefile.am
*** VampirTrace-5.14.4/vtlib/Makefile.am	2013-03-27 10:41:00.000000000 +0100
--- VampirTrace-5.14.4-apihooks/vtlib/Makefile.am	2016-03-12 09:34:36.155411716 +0100
***************
*** 256,261 ****
--- 256,269 ----
  PLUGINCNTRCFLAGS =
  endif
  
+ if AMHAVEAPIHOOKS
+ APIHOOKSCFLAGS = -DVT_API_HOOKS_CLASS=$(APIHOOKSPREFIX)
+ APIHOOKSLIBRARY = $(APIHOOKSLIBDIR) $(APIHOOKSLIB)
+ else
+ APIHOOKSCFLAGS =
+ APIHOOKSLIBRARY =
+ endif
+ 
  if AMHAVEMETRICS
  if AMHAVEPAPI
  METRSOURCES = vt_metric_papi.c
diff -crB --new-file VampirTrace-5.14.4/vtlib/vt_api_hook.h VampirTrace-5.14.4-apihooks/vtlib/vt_api_hook.h
*** VampirTrace-5.14.4/vtlib/vt_api_hook.h	1970-01-01 01:00:00.000000000 +0100
--- VampirTrace-5.14.4-apihooks/vtlib/vt_api_hook.h	2013-08-05 16:26:11.000000000 +0200
***************
*** 0 ****
--- 1,47 ----
+ /**
+  * VampirTrace
+  * http://www.tu-dresden.de/zih/vampirtrace
+  *
+  * Copyright (c) 2005-2013, ZIH, TU Dresden, Federal Republic of Germany
+  *
+  * Copyright (c) 1998-2005, Forschungszentrum Juelich, Juelich Supercomputing
+  *                          Centre, Federal Republic of Germany
+  *
+  * See the file COPYING in the package base directory for details
+  **/
+ 
+ 
+ #if defined(VT_API_HOOKS_CLASS)
+ 
+ /* This double dereferencing has to be used. Otherwise A might
+  * not be resolved correctly */
+ 
+ #define CONCAT_(A,B) A ## _ ## B
+ #define CONCAT(A,B) CONCAT_(A,B)
+ 
+ /* Use this to define functions */
+ 
+ #define VT_API_HOOK_DEFINE(function_name, signature) \
+  extern void CONCAT(VT_API_HOOKS_CLASS,function_name signature);
+ 
+ /* Use this to call functions */
+ 
+ #define VT_API_HOOK(function_name, params) \
+   CONCAT(VT_API_HOOKS_CLASS,function_name) params;
+ 
+ /* function definitions */
+ VT_API_HOOK_DEFINE(enter,(uint32_t, uint64_t *, uint32_t))
+ VT_API_HOOK_DEFINE(exit,(uint32_t, uint64_t *))
+ VT_API_HOOK_DEFINE(open,(void))
+ VT_API_HOOK_DEFINE(close,(void))
+ VT_API_HOOK_DEFINE(close_on_signal,(void))
+ VT_API_HOOK_DEFINE(vt_trace_on,(uint32_t,uint8_t))
+ VT_API_HOOK_DEFINE(vt_trace_off,(uint32_t,uint8_t,uint8_t))
+ VT_API_HOOK_DEFINE(reset,(void))
+ VT_API_HOOK_DEFINE(def_region,(uint32_t, const char *, uint32_t, uint32_t,
+     uint32_t, const char *, uint8_t, uint32_t))
+ 
+ #else
+ #define VT_API_HOOK(function_name, params)
+ #endif
+ 
diff -crB --new-file VampirTrace-5.14.4/vtlib/vt_trc.c VampirTrace-5.14.4-apihooks/vtlib/vt_trc.c
*** VampirTrace-5.14.4/vtlib/vt_trc.c	2013-06-14 14:54:54.000000000 +0200
--- VampirTrace-5.14.4-apihooks/vtlib/vt_trc.c	2016-03-12 09:43:07.612858555 +0100
***************
*** 89,94 ****
--- 89,95 ----
  # include "vt_plugin_cntr_int.h"
  #endif /* VT_PLUGIN_CNTR */
  
+ #include "vt_api_hook.h"
  
  #define GET_THREAD_ID(tid)            \
    if ( (tid) == VT_CURRENT_THREAD ) { \
***************
*** 1153,1158 ****
--- 1154,1161 ----
    if ( vt_open_called )
      return;
  
+   VT_API_HOOK(open,());
+ 
    /* do initialization only once */
  #if (defined(VT_MT) || defined(VT_HYB))
    VTThrd_lock(&init_mutex);
***************
*** 1477,1482 ****
--- 1480,1487 ----
    int extra_enters;
    uint64_t time;
  
+   VT_API_HOOK(reset,());
+ 
    vt_is_alive = 0;
  
    /* notice current call stack level */
***************
*** 1601,1606 ****
--- 1606,1613 ----
  
  void vt_close_by_signal(int signum)
  {
+   VT_API_HOOK(close_by_signal,());
+ 
    vt_cntl_msg(2, "Received signal %i on pid %i", signum, getpid());
  
    /* restore original signal handler */
***************
*** 1625,1630 ****
--- 1632,1639 ----
    /* catch vt_close called from child processes through atexit */
    if ( init_pid != getpid() ) return;
  
+   VT_API_HOOK(close,());
+ 
    /* do finalization only once */
  #if (defined(VT_MT) || defined(VT_HYB))
    VTThrd_lock(&init_mutex);
***************
*** 1862,1867 ****
--- 1871,1878 ----
  {
    GET_THREAD_ID(tid);
  
+   VT_API_HOOK(vt_trace_on,(tid,mark));
+ 
    if ( vt_is_alive &&
         VTTHRD_TRACE_STATUS(VTThrdv[tid]) == VT_TRACE_OFF )
    {
***************
*** 1900,1905 ****
--- 1911,1918 ----
  {
    GET_THREAD_ID(tid);
  
+   VT_API_HOOK(vt_trace_off,(tid,mark,permanent));
+ 
    if ( vt_is_alive &&
         VTTHRD_TRACE_STATUS(VTThrdv[tid]) != VT_TRACE_OFF_PERMANENT )
    {
***************
*** 2489,2494 ****
--- 2502,2510 ----
                             rdid,
                             sid);
  
+   VT_API_HOOK(def_region, (tid, rname, fid, begln, endln, rgroup,
+       rtype, rid));
+ 
    return rid;
  }
  
***************
*** 2737,2742 ****
--- 2753,2760 ----
  
    GET_THREAD_ID(tid);
  
+   VT_API_HOOK(enter,(tid,time,rid));
+ 
    /* immediately return, if tracing is disabled permanently */
    if (VTTHRD_TRACE_STATUS(VTThrdv[tid]) == VT_TRACE_OFF_PERMANENT) return 0;
  
***************
*** 2870,2875 ****
--- 2888,2895 ----
  
    GET_THREAD_ID(tid);
  
+   VT_API_HOOK(exit,(tid,time));
+ 
    /* immediately return, if tracing is disabled permanently */
    if (VTTHRD_TRACE_STATUS(VTThrdv[tid]) == VT_TRACE_OFF_PERMANENT) return;
  
